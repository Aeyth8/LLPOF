#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HealingConsumable_Droppable

#include "Basic.hpp"

#include "AkAudio_structs.hpp"


namespace SDK::Params
{

// Function BP_HealingConsumable_Droppable.BP_HealingConsumable_Droppable_C.ExecuteUbergraph_BP_HealingConsumable_Droppable
// 0x0058 (0x0058 - 0x0000)
struct BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteracterComponent*                   K2Node_ComponentBoundEvent_Interacter;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_ComponentBoundEvent_Interactable;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FAkExternalSourceInfo>          Temp_struct_Variable;                              // 0x0018(0x0010)(ConstParm, ReferenceParm)
	class AActor*                                 CallFunc_GetSpyOwner_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(EAkCallbackType CallbackType, class UAkCallbackInfo* CallbackInfo)> Temp_delegate_Variable;                            // 0x0030(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInteracterComponent*                   K2Node_ComponentBoundEvent_Interacter_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 K2Node_ComponentBoundEvent_Interactable_1;         // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable) == 0x000008, "Wrong alignment on BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable");
static_assert(sizeof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable) == 0x000058, "Wrong size on BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, EntryPoint) == 0x000000, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, K2Node_ComponentBoundEvent_Interacter) == 0x000008, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::K2Node_ComponentBoundEvent_Interacter' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, K2Node_ComponentBoundEvent_Interactable) == 0x000010, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::K2Node_ComponentBoundEvent_Interactable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, Temp_struct_Variable) == 0x000018, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, CallFunc_GetSpyOwner_ReturnValue) == 0x000028, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::CallFunc_GetSpyOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, Temp_delegate_Variable) == 0x000030, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::Temp_delegate_Variable' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, CallFunc_PostEvent_ReturnValue) == 0x000040, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::CallFunc_PostEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, K2Node_ComponentBoundEvent_Interacter_1) == 0x000048, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::K2Node_ComponentBoundEvent_Interacter_1' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable, K2Node_ComponentBoundEvent_Interactable_1) == 0x000050, "Member 'BP_HealingConsumable_Droppable_C_ExecuteUbergraph_BP_HealingConsumable_Droppable::K2Node_ComponentBoundEvent_Interactable_1' has a wrong offset!");

// Function BP_HealingConsumable_Droppable.BP_HealingConsumable_Droppable_C.BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature final
{
public:
	class UInteracterComponent*                   Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 Interactable;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature");
static_assert(sizeof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature, Interacter) == 0x000000, "Member 'BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature::Interacter' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature, Interactable) == 0x000008, "Member 'BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_1_OnInteractionDelegate__DelegateSignature::Interactable' has a wrong offset!");

// Function BP_HealingConsumable_Droppable.BP_HealingConsumable_Droppable_C.BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature final
{
public:
	class UInteracterComponent*                   Interacter;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInteractableComponent*                 Interactable;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature) == 0x000008, "Wrong alignment on BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature");
static_assert(sizeof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature) == 0x000010, "Wrong size on BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature, Interacter) == 0x000000, "Member 'BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature::Interacter' has a wrong offset!");
static_assert(offsetof(BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature, Interactable) == 0x000008, "Member 'BP_HealingConsumable_Droppable_C_BndEvt__BP_FoodBase_InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature::Interactable' has a wrong offset!");

}

