#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BasePowerup

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DeceiveInc_structs.hpp"
#include "DeceiveInc_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BasePowerup.BP_BasePowerup_C
// 0x0040 (0x0340 - 0x0300)
class ABP_BasePowerup_C : public ABasePowerupActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0300(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UActiveAbilityConditionComponent*       ActiveAbilityCondition;                            // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      FX_Outline;                                        // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      VFX;                                               // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           FakeTint;                                          // 0x0320(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FLinearColor>                   SecurityColors;                                    // 0x0330(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_BP_BasePowerup(int32 EntryPoint);
	void OnNewSpySpawnedEvent_Event_0(class ADeceiveIncPlayerController* PlayerController, class ASpy* Spy);
	void SetupPowerup();
	void ReceiveBeginPlay();
	void OnInteractionIconStateChanged(EInteractionIconState NewState, EInteractionIconState OldState);
	void BndEvt__BP_BaseIntelActor_InteractableComp_K2Node_ComponentBoundEvent_3_OnInteractionIconChanged__DelegateSignature(class UInteractionIconComponent* OldIcon, class UInteractionIconComponent* NewIcon);
	void BndEvt__InteractableComp_K2Node_ComponentBoundEvent_0_OnInteractionDelegate__DelegateSignature(class UInteracterComponent* Interacter, class UInteractableComponent* Interactable);
	void BP_OnHiddenInContainerChange(bool bNowHidden);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BasePowerup_C">();
	}
	static class ABP_BasePowerup_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BasePowerup_C>();
	}
};
static_assert(alignof(ABP_BasePowerup_C) == 0x000008, "Wrong alignment on ABP_BasePowerup_C");
static_assert(sizeof(ABP_BasePowerup_C) == 0x000340, "Wrong size on ABP_BasePowerup_C");
static_assert(offsetof(ABP_BasePowerup_C, UberGraphFrame) == 0x000300, "Member 'ABP_BasePowerup_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_BasePowerup_C, ActiveAbilityCondition) == 0x000308, "Member 'ABP_BasePowerup_C::ActiveAbilityCondition' has a wrong offset!");
static_assert(offsetof(ABP_BasePowerup_C, FX_Outline) == 0x000310, "Member 'ABP_BasePowerup_C::FX_Outline' has a wrong offset!");
static_assert(offsetof(ABP_BasePowerup_C, VFX) == 0x000318, "Member 'ABP_BasePowerup_C::VFX' has a wrong offset!");
static_assert(offsetof(ABP_BasePowerup_C, FakeTint) == 0x000320, "Member 'ABP_BasePowerup_C::FakeTint' has a wrong offset!");
static_assert(offsetof(ABP_BasePowerup_C, SecurityColors) == 0x000330, "Member 'ABP_BasePowerup_C::SecurityColors' has a wrong offset!");

}

