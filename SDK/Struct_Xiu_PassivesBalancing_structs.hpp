#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_Xiu_PassivesBalancing

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct Struct_Xiu_PassivesBalancing.Struct_Xiu_PassivesBalancing
// 0x001C (0x001C - 0x0000)
struct FStruct_Xiu_PassivesBalancing final
{
public:
	float                                         BaseDetectionRange_3_46F370E042D0DEC9C1F698BF767208A9; // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseDetectionHeight_5_AC6FA951439CA090AA9FD69DF224557F; // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod1LoSDistance_7_E0AFD5F240B30D43AD0D7BA49D6ACE29; // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod1MaxAngle_9_7C9FC20944ECC05056EDA999F9CD5333;   // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod1MinHealthToDetect_11_2EF35A92464DAA2F411C2DBE3E34405C; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod2TimeToShowPing_13_BD9829364C68C624862ED9BA14CD999C; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod2DelayBeforeVictim_18_657DC1174ACC77B43344E5995A5199CA; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStruct_Xiu_PassivesBalancing) == 0x000004, "Wrong alignment on FStruct_Xiu_PassivesBalancing");
static_assert(sizeof(FStruct_Xiu_PassivesBalancing) == 0x00001C, "Wrong size on FStruct_Xiu_PassivesBalancing");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, BaseDetectionRange_3_46F370E042D0DEC9C1F698BF767208A9) == 0x000000, "Member 'FStruct_Xiu_PassivesBalancing::BaseDetectionRange_3_46F370E042D0DEC9C1F698BF767208A9' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, BaseDetectionHeight_5_AC6FA951439CA090AA9FD69DF224557F) == 0x000004, "Member 'FStruct_Xiu_PassivesBalancing::BaseDetectionHeight_5_AC6FA951439CA090AA9FD69DF224557F' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, Mod1LoSDistance_7_E0AFD5F240B30D43AD0D7BA49D6ACE29) == 0x000008, "Member 'FStruct_Xiu_PassivesBalancing::Mod1LoSDistance_7_E0AFD5F240B30D43AD0D7BA49D6ACE29' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, Mod1MaxAngle_9_7C9FC20944ECC05056EDA999F9CD5333) == 0x00000C, "Member 'FStruct_Xiu_PassivesBalancing::Mod1MaxAngle_9_7C9FC20944ECC05056EDA999F9CD5333' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, Mod1MinHealthToDetect_11_2EF35A92464DAA2F411C2DBE3E34405C) == 0x000010, "Member 'FStruct_Xiu_PassivesBalancing::Mod1MinHealthToDetect_11_2EF35A92464DAA2F411C2DBE3E34405C' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, Mod2TimeToShowPing_13_BD9829364C68C624862ED9BA14CD999C) == 0x000014, "Member 'FStruct_Xiu_PassivesBalancing::Mod2TimeToShowPing_13_BD9829364C68C624862ED9BA14CD999C' has a wrong offset!");
static_assert(offsetof(FStruct_Xiu_PassivesBalancing, Mod2DelayBeforeVictim_18_657DC1174ACC77B43344E5995A5199CA) == 0x000018, "Member 'FStruct_Xiu_PassivesBalancing::Mod2DelayBeforeVictim_18_657DC1174ACC77B43344E5995A5199CA' has a wrong offset!");

}

