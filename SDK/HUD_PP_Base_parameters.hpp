#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PP_Base

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HUD_PP_Base.HUD_PP_Base_C.ExecuteUbergraph_HUD_PP_Base
// 0x0090 (0x0090 - 0x0000)
struct HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0008(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDistanceInM_Distance;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class UTexture2D*                             K2Node_CustomEvent_NewPPTexture;                   // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base) == 0x000008, "Wrong alignment on HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base");
static_assert(sizeof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base) == 0x000090, "Wrong size on HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, EntryPoint) == 0x000000, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, K2Node_Event_MyGeometry) == 0x000008, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, K2Node_Event_InDeltaTime) == 0x000040, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, CallFunc_GetDistanceInM_Distance) == 0x000044, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::CallFunc_GetDistanceInM_Distance' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, CallFunc_Conv_IntToString_ReturnValue) == 0x000048, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, K2Node_CustomEvent_NewPPTexture) == 0x000080, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::K2Node_CustomEvent_NewPPTexture' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'HUD_PP_Base_C_ExecuteUbergraph_HUD_PP_Base::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HUD_PP_Base.HUD_PP_Base_C.SetPPTexture
// 0x0008 (0x0008 - 0x0000)
struct HUD_PP_Base_C_SetPPTexture final
{
public:
	class UTexture2D*                             NewPPTexture;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PP_Base_C_SetPPTexture) == 0x000008, "Wrong alignment on HUD_PP_Base_C_SetPPTexture");
static_assert(sizeof(HUD_PP_Base_C_SetPPTexture) == 0x000008, "Wrong size on HUD_PP_Base_C_SetPPTexture");
static_assert(offsetof(HUD_PP_Base_C_SetPPTexture, NewPPTexture) == 0x000000, "Member 'HUD_PP_Base_C_SetPPTexture::NewPPTexture' has a wrong offset!");

// Function HUD_PP_Base.HUD_PP_Base_C.Tick
// 0x003C (0x003C - 0x0000)
struct HUD_PP_Base_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PP_Base_C_Tick) == 0x000004, "Wrong alignment on HUD_PP_Base_C_Tick");
static_assert(sizeof(HUD_PP_Base_C_Tick) == 0x00003C, "Wrong size on HUD_PP_Base_C_Tick");
static_assert(offsetof(HUD_PP_Base_C_Tick, MyGeometry) == 0x000000, "Member 'HUD_PP_Base_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_Tick, InDeltaTime) == 0x000038, "Member 'HUD_PP_Base_C_Tick::InDeltaTime' has a wrong offset!");

// Function HUD_PP_Base.HUD_PP_Base_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_PP_Base_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PP_Base_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_PP_Base_C_PreConstruct");
static_assert(sizeof(HUD_PP_Base_C_PreConstruct) == 0x000001, "Wrong size on HUD_PP_Base_C_PreConstruct");
static_assert(offsetof(HUD_PP_Base_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_PP_Base_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_PP_Base.HUD_PP_Base_C.GetDistanceInM
// 0x0038 (0x0038 - 0x0000)
struct HUD_PP_Base_C_GetDistanceInM final
{
public:
	int32                                         Distance;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PP_Base_C_GetDistanceInM) == 0x000008, "Wrong alignment on HUD_PP_Base_C_GetDistanceInM");
static_assert(sizeof(HUD_PP_Base_C_GetDistanceInM) == 0x000038, "Wrong size on HUD_PP_Base_C_GetDistanceInM");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, Distance) == 0x000000, "Member 'HUD_PP_Base_C_GetDistanceInM::Distance' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_GetPlayerPawn_ReturnValue) == 0x000008, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000018, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_Vector_Distance_ReturnValue) == 0x00002C, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000030, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PP_Base_C_GetDistanceInM, CallFunc_Round_ReturnValue) == 0x000034, "Member 'HUD_PP_Base_C_GetDistanceInM::CallFunc_Round_ReturnValue' has a wrong offset!");

}

