#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_PlayerInfoV2

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DeceiveInc_structs.hpp"


namespace SDK::Params
{

// Function HUD_PlayerInfoV2.HUD_PlayerInfoV2_C.ExecuteUbergraph_HUD_PlayerInfoV2
// 0x0020 (0x0020 - 0x0000)
struct HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDIGameInstanceBase*                    K2Node_DynamicCast_AsDIGame_Instance_Base;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2) == 0x000008, "Wrong alignment on HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2");
static_assert(sizeof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2) == 0x000020, "Wrong size on HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2");
static_assert(offsetof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2, EntryPoint) == 0x000000, "Member 'HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2, K2Node_Event_IsDesignTime) == 0x000004, "Member 'HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2, K2Node_DynamicCast_AsDIGame_Instance_Base) == 0x000010, "Member 'HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2::K2Node_DynamicCast_AsDIGame_Instance_Base' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HUD_PlayerInfoV2_C_ExecuteUbergraph_HUD_PlayerInfoV2::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HUD_PlayerInfoV2.HUD_PlayerInfoV2_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct HUD_PlayerInfoV2_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfoV2_C_PreConstruct) == 0x000001, "Wrong alignment on HUD_PlayerInfoV2_C_PreConstruct");
static_assert(sizeof(HUD_PlayerInfoV2_C_PreConstruct) == 0x000001, "Wrong size on HUD_PlayerInfoV2_C_PreConstruct");
static_assert(offsetof(HUD_PlayerInfoV2_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'HUD_PlayerInfoV2_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function HUD_PlayerInfoV2.HUD_PlayerInfoV2_C.SetupPlatform
// 0x0098 (0x0098 - 0x0000)
struct HUD_PlayerInfoV2_C_SetupPlatform final
{
public:
	struct FLinearColor                           Console_Color;                                     // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           PC_Color;                                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPlatformDataAsset*                     PlatformData;                                      // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatformType                                 Temp_byte_Variable;                                // 0x0028(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlatformInfo                          CallFunc_Map_Find_Value;                           // 0x0030(0x0020)()
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPlatformType                                 CallFunc_GetUserPlatform_ReturnValue;              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformDataAsset*                     CallFunc_GetPlatformData_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPlatformType                                 CallFunc_GetCurrentPlatformType_ReturnValue;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x5];                                       // 0x0063(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPlatformInfo                          CallFunc_Map_Find_Value_1;                         // 0x0068(0x0020)()
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlatformDataAsset*                     CallFunc_GetPlatformData_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_PlayerInfoV2_C_SetupPlatform) == 0x000008, "Wrong alignment on HUD_PlayerInfoV2_C_SetupPlatform");
static_assert(sizeof(HUD_PlayerInfoV2_C_SetupPlatform) == 0x000098, "Wrong size on HUD_PlayerInfoV2_C_SetupPlatform");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, Console_Color) == 0x000000, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::Console_Color' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, PC_Color) == 0x000010, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::PC_Color' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, PlatformData) == 0x000020, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::PlatformData' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, Temp_byte_Variable) == 0x000028, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_Map_Find_Value) == 0x000030, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_Map_Find_ReturnValue) == 0x000050, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_GetUserPlatform_ReturnValue) == 0x000051, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_GetUserPlatform_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_GetPlatformData_ReturnValue) == 0x000058, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_GetPlatformData_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_GetCurrentPlatformType_ReturnValue) == 0x000060, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_GetCurrentPlatformType_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000061, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000062, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_Map_Find_Value_1) == 0x000068, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_Map_Find_ReturnValue_1) == 0x000088, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_SetupPlatform, CallFunc_GetPlatformData_ReturnValue_1) == 0x000090, "Member 'HUD_PlayerInfoV2_C_SetupPlatform::CallFunc_GetPlatformData_ReturnValue_1' has a wrong offset!");

// Function HUD_PlayerInfoV2.HUD_PlayerInfoV2_C.IsPlayerStateValid
// 0x0018 (0x0018 - 0x0000)
struct HUD_PlayerInfoV2_C_IsPlayerStateValid final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ADIPlayerState*                         CallFunc_GetPlayerState_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_PlayerInfoV2_C_IsPlayerStateValid) == 0x000008, "Wrong alignment on HUD_PlayerInfoV2_C_IsPlayerStateValid");
static_assert(sizeof(HUD_PlayerInfoV2_C_IsPlayerStateValid) == 0x000018, "Wrong size on HUD_PlayerInfoV2_C_IsPlayerStateValid");
static_assert(offsetof(HUD_PlayerInfoV2_C_IsPlayerStateValid, ReturnValue) == 0x000000, "Member 'HUD_PlayerInfoV2_C_IsPlayerStateValid::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_IsPlayerStateValid, CallFunc_GetPlayerState_ReturnValue) == 0x000008, "Member 'HUD_PlayerInfoV2_C_IsPlayerStateValid::CallFunc_GetPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_PlayerInfoV2_C_IsPlayerStateValid, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HUD_PlayerInfoV2_C_IsPlayerStateValid::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

