#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_DirectionalDamageIndicator

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DeceiveInc_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_DirectionalDamageIndicator.HUD_DirectionalDamageIndicator_C
// 0x0028 (0x02A8 - 0x0280)
class UHUD_DirectionalDamageIndicator_C final : public UDirectionalDamageIndicatorWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Autorun;                                           // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 DamageImage;                                       // 0x0290(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            DamageScaleCurve;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_HUD_DirectionalDamageIndicator(int32 EntryPoint);
	void BP_OnAddedToScreen();
	void Construct();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_DirectionalDamageIndicator_C">();
	}
	static class UHUD_DirectionalDamageIndicator_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_DirectionalDamageIndicator_C>();
	}
};
static_assert(alignof(UHUD_DirectionalDamageIndicator_C) == 0x000008, "Wrong alignment on UHUD_DirectionalDamageIndicator_C");
static_assert(sizeof(UHUD_DirectionalDamageIndicator_C) == 0x0002A8, "Wrong size on UHUD_DirectionalDamageIndicator_C");
static_assert(offsetof(UHUD_DirectionalDamageIndicator_C, UberGraphFrame) == 0x000280, "Member 'UHUD_DirectionalDamageIndicator_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHUD_DirectionalDamageIndicator_C, Autorun) == 0x000288, "Member 'UHUD_DirectionalDamageIndicator_C::Autorun' has a wrong offset!");
static_assert(offsetof(UHUD_DirectionalDamageIndicator_C, DamageImage) == 0x000290, "Member 'UHUD_DirectionalDamageIndicator_C::DamageImage' has a wrong offset!");
static_assert(offsetof(UHUD_DirectionalDamageIndicator_C, MaterialInstance) == 0x000298, "Member 'UHUD_DirectionalDamageIndicator_C::MaterialInstance' has a wrong offset!");
static_assert(offsetof(UHUD_DirectionalDamageIndicator_C, DamageScaleCurve) == 0x0002A0, "Member 'UHUD_DirectionalDamageIndicator_C::DamageScaleCurve' has a wrong offset!");

}

