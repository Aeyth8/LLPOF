#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_NetworkInfo

#include "Basic.hpp"

#include "DeceiveInc_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.ExecuteUbergraph_HUD_NetworkInfo
// 0x0008 (0x0008 - 0x0000)
struct HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetInfoDisplayMode                           K2Node_Event_NewDisplayMode;                       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo) == 0x000004, "Wrong alignment on HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo");
static_assert(sizeof(HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo) == 0x000008, "Wrong size on HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo");
static_assert(offsetof(HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo, EntryPoint) == 0x000000, "Member 'HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo, K2Node_Event_NewDisplayMode) == 0x000004, "Member 'HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo::K2Node_Event_NewDisplayMode' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo, K2Node_SwitchEnum_CmpSuccess) == 0x000005, "Member 'HUD_NetworkInfo_C_ExecuteUbergraph_HUD_NetworkInfo::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.BP_OnDisplayModeChange
// 0x0001 (0x0001 - 0x0000)
struct HUD_NetworkInfo_C_BP_OnDisplayModeChange final
{
public:
	ENetInfoDisplayMode                           NewDisplayMode;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_BP_OnDisplayModeChange) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_BP_OnDisplayModeChange");
static_assert(sizeof(HUD_NetworkInfo_C_BP_OnDisplayModeChange) == 0x000001, "Wrong size on HUD_NetworkInfo_C_BP_OnDisplayModeChange");
static_assert(offsetof(HUD_NetworkInfo_C_BP_OnDisplayModeChange, NewDisplayMode) == 0x000000, "Member 'HUD_NetworkInfo_C_BP_OnDisplayModeChange::NewDisplayMode' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.UpdateIcons
// 0x0014 (0x0014 - 0x0000)
struct HUD_NetworkInfo_C_UpdateIcons final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_4;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_5;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable_6;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_7;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDisconnected_ReturnValue;               // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsServerLagging_ReturnValue;              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_1;                           // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsConnexionLagging_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPacketLoss_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_3;                           // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_UpdateIcons) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_UpdateIcons");
static_assert(sizeof(HUD_NetworkInfo_C_UpdateIcons) == 0x000014, "Wrong size on HUD_NetworkInfo_C_UpdateIcons");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_bool_Variable) == 0x000000, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_1) == 0x000002, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_bool_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_2) == 0x000004, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_3) == 0x000005, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_bool_Variable_2) == 0x000006, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_4) == 0x000007, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_5) == 0x000008, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_bool_Variable_3) == 0x000009, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_6) == 0x00000A, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, Temp_byte_Variable_7) == 0x00000B, "Member 'HUD_NetworkInfo_C_UpdateIcons::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, CallFunc_IsDisconnected_ReturnValue) == 0x00000C, "Member 'HUD_NetworkInfo_C_UpdateIcons::CallFunc_IsDisconnected_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, CallFunc_IsServerLagging_ReturnValue) == 0x00000D, "Member 'HUD_NetworkInfo_C_UpdateIcons::CallFunc_IsServerLagging_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, K2Node_Select_Default) == 0x00000E, "Member 'HUD_NetworkInfo_C_UpdateIcons::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, K2Node_Select_Default_1) == 0x00000F, "Member 'HUD_NetworkInfo_C_UpdateIcons::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, CallFunc_IsConnexionLagging_ReturnValue) == 0x000010, "Member 'HUD_NetworkInfo_C_UpdateIcons::CallFunc_IsConnexionLagging_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, CallFunc_IsPacketLoss_ReturnValue) == 0x000011, "Member 'HUD_NetworkInfo_C_UpdateIcons::CallFunc_IsPacketLoss_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, K2Node_Select_Default_2) == 0x000012, "Member 'HUD_NetworkInfo_C_UpdateIcons::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateIcons, K2Node_Select_Default_3) == 0x000013, "Member 'HUD_NetworkInfo_C_UpdateIcons::K2Node_Select_Default_3' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.UpdateDetails
// 0x03B0 (0x03B0 - 0x0000)
struct HUD_NetworkInfo_C_UpdateDetails final
{
public:
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0000(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0018(0x0018)()
	struct FDINetworkInfoData                     CallFunc_GetNetworkInfo_ReturnValue;               // 0x0030(0x0050)(ConstParm)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0080(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0098(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0100(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0118(0x0018)()
	bool                                          CallFunc_IsEmpty_ReturnValue;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty_ReturnValue_1;                    // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x0160(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0178(0x0018)()
	class FString                                 CallFunc_BuildString_Int_ReturnValue;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x01B0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BuildString_Int_ReturnValue_1;            // 0x01E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x01F8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_8;          // 0x0210(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0230(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_3;           // 0x0248(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_2;          // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_3;          // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_9;          // 0x02C0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_10;         // 0x02D8(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_4;           // 0x02F0(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_5;           // 0x0308(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_4;          // 0x0320(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_5;          // 0x0330(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0340(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0350(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0370(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_11;         // 0x0380(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_12;         // 0x0398(0x0018)()
};
static_assert(alignof(HUD_NetworkInfo_C_UpdateDetails) == 0x000008, "Wrong alignment on HUD_NetworkInfo_C_UpdateDetails");
static_assert(sizeof(HUD_NetworkInfo_C_UpdateDetails) == 0x0003B0, "Wrong size on HUD_NetworkInfo_C_UpdateDetails");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000018, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_GetNetworkInfo_ReturnValue) == 0x000030, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_GetNetworkInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue) == 0x000080, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000098, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue) == 0x0000B0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue) == 0x0000C0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000D0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000E0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000F0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000100, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000118, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_IsEmpty_ReturnValue) == 0x000130, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000138, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000148, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_IsEmpty_ReturnValue_1) == 0x000158, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_5) == 0x000160, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000178, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_BuildString_Int_ReturnValue) == 0x000190, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_BuildString_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue_1) == 0x0001A0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_6) == 0x0001B0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001C8, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001D8, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_BuildString_Int_ReturnValue_1) == 0x0001E8, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_BuildString_Int_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_7) == 0x0001F8, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_8) == 0x000210, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000228, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x00022C, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000230, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue_3) == 0x000248, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue_2) == 0x000260, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue_3) == 0x000270, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000280, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000290, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0002A0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0002B0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_9) == 0x0002C0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_10) == 0x0002D8, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue_4) == 0x0002F0, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_FloatToText_ReturnValue_5) == 0x000308, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_FloatToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue_4) == 0x000320, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_TextToString_ReturnValue_5) == 0x000330, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_TextToString_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000340, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000350, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000360, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000370, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_11) == 0x000380, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_UpdateDetails, CallFunc_Conv_StringToText_ReturnValue_12) == 0x000398, "Member 'HUD_NetworkInfo_C_UpdateDetails::CallFunc_Conv_StringToText_ReturnValue_12' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.Get_General_Visibility
// 0x0006 (0x0006 - 0x0000)
struct HUD_NetworkInfo_C_Get_General_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanBeDisplayed_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_Get_General_Visibility) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_Get_General_Visibility");
static_assert(sizeof(HUD_NetworkInfo_C_Get_General_Visibility) == 0x000006, "Wrong size on HUD_NetworkInfo_C_Get_General_Visibility");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, Temp_bool_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, Temp_byte_Variable) == 0x000002, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, CallFunc_CanBeDisplayed_ReturnValue) == 0x000004, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::CallFunc_CanBeDisplayed_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_General_Visibility, K2Node_Select_Default) == 0x000005, "Member 'HUD_NetworkInfo_C_Get_General_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.Get_Region_Visibility
// 0x0006 (0x0006 - 0x0000)
struct HUD_NetworkInfo_C_Get_Region_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDisplayRegion_ReturnValue;             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_Get_Region_Visibility) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_Get_Region_Visibility");
static_assert(sizeof(HUD_NetworkInfo_C_Get_Region_Visibility) == 0x000006, "Wrong size on HUD_NetworkInfo_C_Get_Region_Visibility");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, Temp_bool_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, Temp_byte_Variable) == 0x000002, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, CallFunc_CanDisplayRegion_ReturnValue) == 0x000004, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::CallFunc_CanDisplayRegion_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Region_Visibility, K2Node_Select_Default) == 0x000005, "Member 'HUD_NetworkInfo_C_Get_Region_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.Get Server FPS Visibility
// 0x0006 (0x0006 - 0x0000)
struct HUD_NetworkInfo_C_Get_Server_FPS_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDisplayServerFrameTime_ReturnValue;    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_Get_Server_FPS_Visibility");
static_assert(sizeof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility) == 0x000006, "Wrong size on HUD_NetworkInfo_C_Get_Server_FPS_Visibility");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, Temp_bool_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, Temp_byte_Variable) == 0x000002, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, CallFunc_CanDisplayServerFrameTime_ReturnValue) == 0x000004, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::CallFunc_CanDisplayServerFrameTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_Server_FPS_Visibility, K2Node_Select_Default) == 0x000005, "Member 'HUD_NetworkInfo_C_Get_Server_FPS_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.Get_SessionID_Visibility
// 0x0006 (0x0006 - 0x0000)
struct HUD_NetworkInfo_C_Get_SessionID_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDisplaySessionID_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_Get_SessionID_Visibility) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_Get_SessionID_Visibility");
static_assert(sizeof(HUD_NetworkInfo_C_Get_SessionID_Visibility) == 0x000006, "Wrong size on HUD_NetworkInfo_C_Get_SessionID_Visibility");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, Temp_bool_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, Temp_byte_Variable) == 0x000002, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, CallFunc_CanDisplaySessionID_ReturnValue) == 0x000004, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::CallFunc_CanDisplaySessionID_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_SessionID_Visibility, K2Node_Select_Default) == 0x000005, "Member 'HUD_NetworkInfo_C_Get_SessionID_Visibility::K2Node_Select_Default' has a wrong offset!");

// Function HUD_NetworkInfo.HUD_NetworkInfo_C.Get_ServerVersion_Visibility
// 0x0006 (0x0006 - 0x0000)
struct HUD_NetworkInfo_C_Get_ServerVersion_Visibility final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDisplayServerVersion_ReturnValue;      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility) == 0x000001, "Wrong alignment on HUD_NetworkInfo_C_Get_ServerVersion_Visibility");
static_assert(sizeof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility) == 0x000006, "Wrong size on HUD_NetworkInfo_C_Get_ServerVersion_Visibility");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, ReturnValue) == 0x000000, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, Temp_bool_Variable) == 0x000001, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, Temp_byte_Variable) == 0x000002, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, Temp_byte_Variable_1) == 0x000003, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, CallFunc_CanDisplayServerVersion_ReturnValue) == 0x000004, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::CallFunc_CanDisplayServerVersion_ReturnValue' has a wrong offset!");
static_assert(offsetof(HUD_NetworkInfo_C_Get_ServerVersion_Visibility, K2Node_Select_Default) == 0x000005, "Member 'HUD_NetworkInfo_C_Get_ServerVersion_Visibility::K2Node_Select_Default' has a wrong offset!");

}

