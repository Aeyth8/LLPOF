#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_Cavaliere_PassivesBalancing

#include "Basic.hpp"

#include "DeceiveInc_structs.hpp"


namespace SDK
{

// ScriptStruct Struct_Cavaliere_PassivesBalancing.Struct_Cavaliere_PassivesBalancing
// 0x002C (0x002C - 0x0000)
struct FStruct_Cavaliere_PassivesBalancing final
{
public:
	float                                         Duration_2_50DB5F9E48B890423F2A67A84FE2CF4C;       // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseImpulseSpeed_4_AD1FB65C44717919D10695870183296B; // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         BaseDistanceStopFromTarget_6_92B5CDD84D83C328080EADB95A7515E6; // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FMeleeChargeLevel                      BaseChargeLevel0_20_9F93827C4EE9CCA2F9FC7C924391472B; // 0x000C(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMeleeChargeLevel                      BaseChargeLevel1_22_B232AE2E490B1407582363A23A3067E1; // 0x0018(0x000C)(Edit, BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	float                                         Mod1SpeedIncrease_16_D0D660304F9782D27AD9F3B37BAB1012; // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Mod2SlowPercent_17_D29271074C615FF81BB1E4B4C05053F6; // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStruct_Cavaliere_PassivesBalancing) == 0x000004, "Wrong alignment on FStruct_Cavaliere_PassivesBalancing");
static_assert(sizeof(FStruct_Cavaliere_PassivesBalancing) == 0x00002C, "Wrong size on FStruct_Cavaliere_PassivesBalancing");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, Duration_2_50DB5F9E48B890423F2A67A84FE2CF4C) == 0x000000, "Member 'FStruct_Cavaliere_PassivesBalancing::Duration_2_50DB5F9E48B890423F2A67A84FE2CF4C' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, BaseImpulseSpeed_4_AD1FB65C44717919D10695870183296B) == 0x000004, "Member 'FStruct_Cavaliere_PassivesBalancing::BaseImpulseSpeed_4_AD1FB65C44717919D10695870183296B' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, BaseDistanceStopFromTarget_6_92B5CDD84D83C328080EADB95A7515E6) == 0x000008, "Member 'FStruct_Cavaliere_PassivesBalancing::BaseDistanceStopFromTarget_6_92B5CDD84D83C328080EADB95A7515E6' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, BaseChargeLevel0_20_9F93827C4EE9CCA2F9FC7C924391472B) == 0x00000C, "Member 'FStruct_Cavaliere_PassivesBalancing::BaseChargeLevel0_20_9F93827C4EE9CCA2F9FC7C924391472B' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, BaseChargeLevel1_22_B232AE2E490B1407582363A23A3067E1) == 0x000018, "Member 'FStruct_Cavaliere_PassivesBalancing::BaseChargeLevel1_22_B232AE2E490B1407582363A23A3067E1' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, Mod1SpeedIncrease_16_D0D660304F9782D27AD9F3B37BAB1012) == 0x000024, "Member 'FStruct_Cavaliere_PassivesBalancing::Mod1SpeedIncrease_16_D0D660304F9782D27AD9F3B37BAB1012' has a wrong offset!");
static_assert(offsetof(FStruct_Cavaliere_PassivesBalancing, Mod2SlowPercent_17_D29271074C615FF81BB1E4B4C05053F6) == 0x000028, "Member 'FStruct_Cavaliere_PassivesBalancing::Mod2SlowPercent_17_D29271074C615FF81BB1E4B4C05053F6' has a wrong offset!");

}

