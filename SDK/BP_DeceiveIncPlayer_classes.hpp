#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DeceiveIncPlayer

#include "Basic.hpp"

#include "EJoystickTypes_structs.hpp"
#include "Engine_structs.hpp"
#include "DeceiveInc_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DeceiveIncPlayer.BP_DeceiveIncPlayer_C
// 0x0010 (0x0930 - 0x0920)
class ABP_DeceiveIncPlayer_C final : public ADeceiveIncPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0920(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          LeftStickPressed;                                  // 0x0928(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          RightStickPressed;                                 // 0x0929(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          AnalogCursorEnabled;                               // 0x092A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void GetJoystickDirection(EJoystickTypes Stick, struct FVector2D* StickInput);
	void ReceiveBeginPlay();
	void ExecuteUbergraph_BP_DeceiveIncPlayer(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DeceiveIncPlayer_C">();
	}
	static class ABP_DeceiveIncPlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DeceiveIncPlayer_C>();
	}
};
static_assert(alignof(ABP_DeceiveIncPlayer_C) == 0x000008, "Wrong alignment on ABP_DeceiveIncPlayer_C");
static_assert(sizeof(ABP_DeceiveIncPlayer_C) == 0x000930, "Wrong size on ABP_DeceiveIncPlayer_C");
static_assert(offsetof(ABP_DeceiveIncPlayer_C, UberGraphFrame) == 0x000920, "Member 'ABP_DeceiveIncPlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_DeceiveIncPlayer_C, LeftStickPressed) == 0x000928, "Member 'ABP_DeceiveIncPlayer_C::LeftStickPressed' has a wrong offset!");
static_assert(offsetof(ABP_DeceiveIncPlayer_C, RightStickPressed) == 0x000929, "Member 'ABP_DeceiveIncPlayer_C::RightStickPressed' has a wrong offset!");
static_assert(offsetof(ABP_DeceiveIncPlayer_C, AnalogCursorEnabled) == 0x00092A, "Member 'ABP_DeceiveIncPlayer_C::AnalogCursorEnabled' has a wrong offset!");

}

