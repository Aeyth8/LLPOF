#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MENU_Loading

#include "Basic.hpp"


namespace SDK::Params
{

// Function MENU_Loading.MENU_Loading_C.ExecuteUbergraph_MENU_Loading
// 0x00C0 (0x00C0 - 0x0000)
struct MENU_Loading_C_ExecuteUbergraph_MENU_Loading final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const class FString& LoadingInfo)> K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGlobalEBusSubsystem*                   CallFunc_GetGameInstanceSubsystem_ReturnValue;     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Event_MapTexture_1;                         // 0x0020(0x0028)(ConstParm, UObjectWrapper, HasGetValueTypeHash)
	class FText                                   K2Node_Event_Name;                                 // 0x0048(0x0018)(ConstParm)
	class FText                                   K2Node_Event_Subtext;                              // 0x0060(0x0018)(ConstParm)
	class FText                                   K2Node_Event_FlavorText;                           // 0x0078(0x0018)(ConstParm)
	const class UTexture2D*                       K2Node_Event_MapTexture;                           // 0x0090(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_LoadingInfo;                    // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00A8(0x0018)()
};
static_assert(alignof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading) == 0x000008, "Wrong alignment on MENU_Loading_C_ExecuteUbergraph_MENU_Loading");
static_assert(sizeof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading) == 0x0000C0, "Wrong size on MENU_Loading_C_ExecuteUbergraph_MENU_Loading");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, EntryPoint) == 0x000000, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::EntryPoint' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, CallFunc_GetGameInstanceSubsystem_ReturnValue) == 0x000018, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::CallFunc_GetGameInstanceSubsystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_Event_MapTexture_1) == 0x000020, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_Event_MapTexture_1' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_Event_Name) == 0x000048, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_Event_Name' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_Event_Subtext) == 0x000060, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_Event_Subtext' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_Event_FlavorText) == 0x000078, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_Event_FlavorText' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_Event_MapTexture) == 0x000090, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_Event_MapTexture' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, K2Node_CustomEvent_LoadingInfo) == 0x000098, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::K2Node_CustomEvent_LoadingInfo' has a wrong offset!");
static_assert(offsetof(MENU_Loading_C_ExecuteUbergraph_MENU_Loading, CallFunc_Conv_StringToText_ReturnValue) == 0x0000A8, "Member 'MENU_Loading_C_ExecuteUbergraph_MENU_Loading::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.OnLoadingScreenInfoEvent_Event_0
// 0x0010 (0x0010 - 0x0000)
struct MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0 final
{
public:
	class FString                                 LoadingInfo;                                       // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0) == 0x000008, "Wrong alignment on MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0");
static_assert(sizeof(MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0) == 0x000010, "Wrong size on MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0");
static_assert(offsetof(MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0, LoadingInfo) == 0x000000, "Member 'MENU_Loading_C_OnLoadingScreenInfoEvent_Event_0::LoadingInfo' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.BP_SetMapTexture2
// 0x0008 (0x0008 - 0x0000)
struct MENU_Loading_C_BP_SetMapTexture2 final
{
public:
	const class UTexture2D*                       MapTexture;                                        // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Loading_C_BP_SetMapTexture2) == 0x000008, "Wrong alignment on MENU_Loading_C_BP_SetMapTexture2");
static_assert(sizeof(MENU_Loading_C_BP_SetMapTexture2) == 0x000008, "Wrong size on MENU_Loading_C_BP_SetMapTexture2");
static_assert(offsetof(MENU_Loading_C_BP_SetMapTexture2, MapTexture) == 0x000000, "Member 'MENU_Loading_C_BP_SetMapTexture2::MapTexture' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.BP_SetMapFlavor
// 0x0018 (0x0018 - 0x0000)
struct MENU_Loading_C_BP_SetMapFlavor final
{
public:
	class FText                                   FlavorText;                                        // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MENU_Loading_C_BP_SetMapFlavor) == 0x000008, "Wrong alignment on MENU_Loading_C_BP_SetMapFlavor");
static_assert(sizeof(MENU_Loading_C_BP_SetMapFlavor) == 0x000018, "Wrong size on MENU_Loading_C_BP_SetMapFlavor");
static_assert(offsetof(MENU_Loading_C_BP_SetMapFlavor, FlavorText) == 0x000000, "Member 'MENU_Loading_C_BP_SetMapFlavor::FlavorText' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.BP_SetMapSubtext
// 0x0018 (0x0018 - 0x0000)
struct MENU_Loading_C_BP_SetMapSubtext final
{
public:
	class FText                                   Subtext;                                           // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MENU_Loading_C_BP_SetMapSubtext) == 0x000008, "Wrong alignment on MENU_Loading_C_BP_SetMapSubtext");
static_assert(sizeof(MENU_Loading_C_BP_SetMapSubtext) == 0x000018, "Wrong size on MENU_Loading_C_BP_SetMapSubtext");
static_assert(offsetof(MENU_Loading_C_BP_SetMapSubtext, Subtext) == 0x000000, "Member 'MENU_Loading_C_BP_SetMapSubtext::Subtext' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.BP_SetMapName
// 0x0018 (0x0018 - 0x0000)
struct MENU_Loading_C_BP_SetMapName final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(MENU_Loading_C_BP_SetMapName) == 0x000008, "Wrong alignment on MENU_Loading_C_BP_SetMapName");
static_assert(sizeof(MENU_Loading_C_BP_SetMapName) == 0x000018, "Wrong size on MENU_Loading_C_BP_SetMapName");
static_assert(offsetof(MENU_Loading_C_BP_SetMapName, Name_0) == 0x000000, "Member 'MENU_Loading_C_BP_SetMapName::Name_0' has a wrong offset!");

// Function MENU_Loading.MENU_Loading_C.BP_SetMapTexture
// 0x0028 (0x0028 - 0x0000)
struct MENU_Loading_C_BP_SetMapTexture final
{
public:
	TSoftObjectPtr<class UTexture2D>              MapTexture;                                        // 0x0000(0x0028)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, UObjectWrapper, HasGetValueTypeHash)
};
static_assert(alignof(MENU_Loading_C_BP_SetMapTexture) == 0x000008, "Wrong alignment on MENU_Loading_C_BP_SetMapTexture");
static_assert(sizeof(MENU_Loading_C_BP_SetMapTexture) == 0x000028, "Wrong size on MENU_Loading_C_BP_SetMapTexture");
static_assert(offsetof(MENU_Loading_C_BP_SetMapTexture, MapTexture) == 0x000000, "Member 'MENU_Loading_C_BP_SetMapTexture::MapTexture' has a wrong offset!");

}

