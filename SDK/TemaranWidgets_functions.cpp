#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: TemaranWidgets

#include "Basic.hpp"

#include "TemaranWidgets_classes.hpp"
#include "TemaranWidgets_parameters.hpp"


namespace SDK
{

// Function TemaranWidgets.T_UserWidget.GetRichTextBoxParentWidget
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UT_RichTextBlock*                 ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UT_RichTextBlock* UT_UserWidget::GetRichTextBoxParentWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_UserWidget", "GetRichTextBoxParentWidget");

	Params::T_UserWidget_GetRichTextBoxParentWidget Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_UserWidget.OnSynchronizeProperties
// (Event, Public, BlueprintEvent)

void UT_UserWidget::OnSynchronizeProperties()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_UserWidget", "OnSynchronizeProperties");

	UObject::ProcessEvent(Func, nullptr);
}


// Function TemaranWidgets.T_GridPanel.AddChildToGrid
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Content                                                (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UT_GridSlot*                      ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UT_GridSlot* UT_GridPanel::AddChildToGrid(class UWidget* Content)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridPanel", "AddChildToGrid");

	Params::T_GridPanel_AddChildToGrid Parms{};

	Parms.Content = Content;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_GridPanel.SetColumnDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   ColumnIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewColumnDefinition                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridPanel::SetColumnDefinition(int32 ColumnIndex, const class FString& NewColumnDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridPanel", "SetColumnDefinition");

	Params::T_GridPanel_SetColumnDefinition Parms{};

	Parms.ColumnIndex = ColumnIndex;
	Parms.NewColumnDefinition = std::move(NewColumnDefinition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridPanel.SetRowDefinition
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   RowIndex                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           NewRowDefinition                                       (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridPanel::SetRowDefinition(int32 RowIndex, const class FString& NewRowDefinition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridPanel", "SetRowDefinition");

	Params::T_GridPanel_SetRowDefinition Parms{};

	Parms.RowIndex = RowIndex;
	Parms.NewRowDefinition = std::move(NewRowDefinition);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetColumn
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InColumn                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetColumn(int32 InColumn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetColumn");

	Params::T_GridSlot_SetColumn Parms{};

	Parms.InColumn = InColumn;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetColumnSpan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InColumnSpan                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetColumnSpan(int32 InColumnSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetColumnSpan");

	Params::T_GridSlot_SetColumnSpan Parms{};

	Parms.InColumnSpan = InColumnSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetHorizontalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EHorizontalAlignment                    InHorizontalAlignment                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetHorizontalAlignment(EHorizontalAlignment InHorizontalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetHorizontalAlignment");

	Params::T_GridSlot_SetHorizontalAlignment Parms{};

	Parms.InHorizontalAlignment = InHorizontalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetLayer
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InLayer                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetLayer(int32 InLayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetLayer");

	Params::T_GridSlot_SetLayer Parms{};

	Parms.InLayer = InLayer;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetPadding
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// struct FMargin                          InPadding                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)

void UT_GridSlot::SetPadding(const struct FMargin& InPadding)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetPadding");

	Params::T_GridSlot_SetPadding Parms{};

	Parms.InPadding = std::move(InPadding);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetRow
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRow                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetRow(int32 InRow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetRow");

	Params::T_GridSlot_SetRow Parms{};

	Parms.InRow = InRow;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetRowSpan
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// int32                                   InRowSpan                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetRowSpan(int32 InRowSpan)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetRowSpan");

	Params::T_GridSlot_SetRowSpan Parms{};

	Parms.InRowSpan = InRowSpan;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_GridSlot.SetVerticalAlignment
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// EVerticalAlignment                      InVerticalAlignment                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_GridSlot::SetVerticalAlignment(EVerticalAlignment InVerticalAlignment)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_GridSlot", "SetVerticalAlignment");

	Params::T_GridSlot_SetVerticalAlignment Parms{};

	Parms.InVerticalAlignment = InVerticalAlignment;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_RichTextBlock.CopyTextStyleFromOtherTextBlock
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// class UT_RichTextBlock*                 OtherTextBlock                                         (Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_RichTextBlock::CopyTextStyleFromOtherTextBlock(class UT_RichTextBlock* OtherTextBlock)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "CopyTextStyleFromOtherTextBlock");

	Params::T_RichTextBlock_CopyTextStyleFromOtherTextBlock Parms{};

	Parms.OtherTextBlock = OtherTextBlock;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_RichTextBlock.ForceRefresh
// (Final, Native, Public, BlueprintCallable)

void UT_RichTextBlock::ForceRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "ForceRefresh");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_RichTextBlock.GetInputDeviceType
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ET_InputDeviceType                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

ET_InputDeviceType UT_RichTextBlock::GetInputDeviceType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "GetInputDeviceType");

	Params::T_RichTextBlock_GetInputDeviceType Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_RichTextBlock.GetTextStyle
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FTextBlockStyle                  ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FTextBlockStyle UT_RichTextBlock::GetTextStyle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "GetTextStyle");

	Params::T_RichTextBlock_GetTextStyle Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_RichTextBlock.GetTextStyleColor
// (Final, Native, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UT_RichTextBlock::GetTextStyleColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "GetTextStyleColor");

	Params::T_RichTextBlock_GetTextStyleColor Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_RichTextBlock.GetTextStyleFont
// (Final, Native, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FSlateFontInfo                   ReturnValue                                            (Parm, OutParm, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FSlateFontInfo UT_RichTextBlock::GetTextStyleFont()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "GetTextStyleFont");

	Params::T_RichTextBlock_GetTextStyleFont Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_RichTextBlock.SetInputDeviceType
// (Final, Native, Public, BlueprintCallable)
// Parameters:
// ET_InputDeviceType                      NewInputDeviceType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_RichTextBlock::SetInputDeviceType(ET_InputDeviceType NewInputDeviceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("T_RichTextBlock", "SetInputDeviceType");

	Params::T_RichTextBlock_SetInputDeviceType Parms{};

	Parms.NewInputDeviceType = NewInputDeviceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_WidgetsFunctionLibrary.GetActionMapping
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DesiredActionName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredBindingIdx                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ET_InputDeviceType                      InputDeviceType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputActionKeyMapping           OutMapping                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   OutMappingIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UT_WidgetsFunctionLibrary::GetActionMapping(const class FString& DesiredActionName, const int32 DesiredBindingIdx, const ET_InputDeviceType InputDeviceType, struct FInputActionKeyMapping* OutMapping, int32* OutMappingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("T_WidgetsFunctionLibrary", "GetActionMapping");

	Params::T_WidgetsFunctionLibrary_GetActionMapping Parms{};

	Parms.DesiredActionName = std::move(DesiredActionName);
	Parms.DesiredBindingIdx = DesiredBindingIdx;
	Parms.InputDeviceType = InputDeviceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMapping != nullptr)
		*OutMapping = std::move(Parms.OutMapping);

	if (OutMappingIndex != nullptr)
		*OutMappingIndex = Parms.OutMappingIndex;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_WidgetsFunctionLibrary.GetAxisMapping
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           DesiredActionName                                      (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   DesiredBindingIdx                                      (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ET_InputDeviceType                      InputDeviceType                                        (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   AxisScaleRequirement                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FInputAxisKeyMapping             OutMapping                                             (Parm, OutParm, NativeAccessSpecifierPublic)
// int32                                   OutMappingIndex                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UT_WidgetsFunctionLibrary::GetAxisMapping(const class FString& DesiredActionName, const int32 DesiredBindingIdx, const ET_InputDeviceType InputDeviceType, float AxisScaleRequirement, struct FInputAxisKeyMapping* OutMapping, int32* OutMappingIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("T_WidgetsFunctionLibrary", "GetAxisMapping");

	Params::T_WidgetsFunctionLibrary_GetAxisMapping Parms{};

	Parms.DesiredActionName = std::move(DesiredActionName);
	Parms.DesiredBindingIdx = DesiredBindingIdx;
	Parms.InputDeviceType = InputDeviceType;
	Parms.AxisScaleRequirement = AxisScaleRequirement;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutMapping != nullptr)
		*OutMapping = std::move(Parms.OutMapping);

	if (OutMappingIndex != nullptr)
		*OutMappingIndex = Parms.OutMappingIndex;

	return Parms.ReturnValue;
}


// Function TemaranWidgets.T_WidgetsFunctionLibrary.ResetUserFocus
// (Final, Native, Static, Public, BlueprintCallable)

void UT_WidgetsFunctionLibrary::ResetUserFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("T_WidgetsFunctionLibrary", "ResetUserFocus");

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, nullptr);

	Func->FunctionFlags = Flgs;
}


// Function TemaranWidgets.T_WidgetsFunctionLibrary.SetInputDeviceType
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// ET_InputDeviceType                      NewInputDeviceType                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UT_WidgetsFunctionLibrary::SetInputDeviceType(ET_InputDeviceType NewInputDeviceType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("T_WidgetsFunctionLibrary", "SetInputDeviceType");

	Params::T_WidgetsFunctionLibrary_SetInputDeviceType Parms{};

	Parms.NewInputDeviceType = NewInputDeviceType;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}

}

