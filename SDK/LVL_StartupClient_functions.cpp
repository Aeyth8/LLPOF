#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LVL_StartupClient

#include "Basic.hpp"

#include "LVL_StartupClient_classes.hpp"
#include "LVL_StartupClient_parameters.hpp"


namespace SDK
{

// Function LVL_StartupClient.LVL_StartupClient_C.ExecuteUbergraph_LVL_StartupClient
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALVL_StartupClient_C::ExecuteUbergraph_LVL_StartupClient(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "ExecuteUbergraph_LVL_StartupClient");

	Params::LVL_StartupClient_C_ExecuteUbergraph_LVL_StartupClient Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LVL_StartupClient.LVL_StartupClient_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void ALVL_StartupClient_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LVL_StartupClient.LVL_StartupClient_C.OnIntentToJoinSession_Event_0
// (BlueprintCallable, BlueprintEvent)

void ALVL_StartupClient_C::OnIntentToJoinSession_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "OnIntentToJoinSession_Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LVL_StartupClient.LVL_StartupClient_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ALVL_StartupClient_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "ReceiveEndPlay");

	Params::LVL_StartupClient_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function LVL_StartupClient.LVL_StartupClient_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ALVL_StartupClient_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function LVL_StartupClient.LVL_StartupClient_C.InpActEvt_AnyKey_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ALVL_StartupClient_C::InpActEvt_AnyKey_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("LVL_StartupClient_C", "InpActEvt_AnyKey_K2Node_InputKeyEvent_0");

	Params::LVL_StartupClient_C_InpActEvt_AnyKey_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}

}

