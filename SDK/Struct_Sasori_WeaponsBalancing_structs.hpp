#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Struct_Sasori_WeaponsBalancing

#include "Basic.hpp"

#include "DeceiveInc_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// ScriptStruct Struct_Sasori_WeaponsBalancing.Struct_Sasori_WeaponsBalancing
// 0x0058 (0x0058 - 0x0000)
struct FStruct_Sasori_WeaponsBalancing final
{
public:
	TArray<struct FSprayChargeLevel>              ThrowMod1ChargeLevels_13_EBC3110C4FED2AB64D7A7C89209F8198; // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         ThrowMod2MaxMultiplier_14_5B2E14FB48D2F86463508CBB01D9A387; // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ThrowMod2MultiplierPerSE_16_D0C3D77C4A3CFCABF02A0BBC7E605829; // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordConnectRange_47_9B70F53B4871CDB71057ECBFAD6BCE63; // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordConnectRadius_44_AAD4308A446A5D6045B4F2B1660DC942; // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                SwordMod2Box_51_FECDE86E4F0CD8B6189F1288A3A2ED31;  // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordCDStrike_35_4C51969042FD04CF542869BD2DF29D53; // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordCDShoot_36_0EE0B3814E98484A823A17A5E9DC120E;  // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordDMG_37_A9C3598149DF764CEE91619957AEE9BE;      // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordMod1ChargeCDStrike_40_930100944099D2EC5CE93CAA48E39063; // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordMod1ChargeCDShoot_41_A80E3AB84BA85CF7B7994784FB2B666D; // 0x003C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FMeleeChargeLevel>              SwordMod1ChargeLevels_55_DB3F477240B9796A13BF14A64E2652C6; // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, NativeAccessSpecifierPublic)
	float                                         SwordMod1ChargeTime_61_8DC5BD1840D18C4E6F4D05A6BA3C5DD4; // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         SwordMod2SlowDuration_58_5EFC37594A8039207D69E480C3193A30; // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FStruct_Sasori_WeaponsBalancing) == 0x000008, "Wrong alignment on FStruct_Sasori_WeaponsBalancing");
static_assert(sizeof(FStruct_Sasori_WeaponsBalancing) == 0x000058, "Wrong size on FStruct_Sasori_WeaponsBalancing");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, ThrowMod1ChargeLevels_13_EBC3110C4FED2AB64D7A7C89209F8198) == 0x000000, "Member 'FStruct_Sasori_WeaponsBalancing::ThrowMod1ChargeLevels_13_EBC3110C4FED2AB64D7A7C89209F8198' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, ThrowMod2MaxMultiplier_14_5B2E14FB48D2F86463508CBB01D9A387) == 0x000010, "Member 'FStruct_Sasori_WeaponsBalancing::ThrowMod2MaxMultiplier_14_5B2E14FB48D2F86463508CBB01D9A387' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, ThrowMod2MultiplierPerSE_16_D0C3D77C4A3CFCABF02A0BBC7E605829) == 0x000014, "Member 'FStruct_Sasori_WeaponsBalancing::ThrowMod2MultiplierPerSE_16_D0C3D77C4A3CFCABF02A0BBC7E605829' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordConnectRange_47_9B70F53B4871CDB71057ECBFAD6BCE63) == 0x000018, "Member 'FStruct_Sasori_WeaponsBalancing::SwordConnectRange_47_9B70F53B4871CDB71057ECBFAD6BCE63' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordConnectRadius_44_AAD4308A446A5D6045B4F2B1660DC942) == 0x00001C, "Member 'FStruct_Sasori_WeaponsBalancing::SwordConnectRadius_44_AAD4308A446A5D6045B4F2B1660DC942' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod2Box_51_FECDE86E4F0CD8B6189F1288A3A2ED31) == 0x000020, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod2Box_51_FECDE86E4F0CD8B6189F1288A3A2ED31' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordCDStrike_35_4C51969042FD04CF542869BD2DF29D53) == 0x00002C, "Member 'FStruct_Sasori_WeaponsBalancing::SwordCDStrike_35_4C51969042FD04CF542869BD2DF29D53' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordCDShoot_36_0EE0B3814E98484A823A17A5E9DC120E) == 0x000030, "Member 'FStruct_Sasori_WeaponsBalancing::SwordCDShoot_36_0EE0B3814E98484A823A17A5E9DC120E' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordDMG_37_A9C3598149DF764CEE91619957AEE9BE) == 0x000034, "Member 'FStruct_Sasori_WeaponsBalancing::SwordDMG_37_A9C3598149DF764CEE91619957AEE9BE' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod1ChargeCDStrike_40_930100944099D2EC5CE93CAA48E39063) == 0x000038, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod1ChargeCDStrike_40_930100944099D2EC5CE93CAA48E39063' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod1ChargeCDShoot_41_A80E3AB84BA85CF7B7994784FB2B666D) == 0x00003C, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod1ChargeCDShoot_41_A80E3AB84BA85CF7B7994784FB2B666D' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod1ChargeLevels_55_DB3F477240B9796A13BF14A64E2652C6) == 0x000040, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod1ChargeLevels_55_DB3F477240B9796A13BF14A64E2652C6' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod1ChargeTime_61_8DC5BD1840D18C4E6F4D05A6BA3C5DD4) == 0x000050, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod1ChargeTime_61_8DC5BD1840D18C4E6F4D05A6BA3C5DD4' has a wrong offset!");
static_assert(offsetof(FStruct_Sasori_WeaponsBalancing, SwordMod2SlowDuration_58_5EFC37594A8039207D69E480C3193A30) == 0x000054, "Member 'FStruct_Sasori_WeaponsBalancing::SwordMod2SlowDuration_58_5EFC37594A8039207D69E480C3193A30' has a wrong offset!");

}

